CREATE TEMP FUNCTION rejection_rules(arr ANY TYPE) AS (
    (SELECT [

        STRUCT("REJECTION_RULE" as mdmStage,
        "((record.uuid is null) or (record.uuid = ''))" as mdmErrorMsg,
        ((record.uuid is null) or (record.uuid = '') or (record.uuid = 'c7e390a8badc9978f68d97e1f2c560a5'))
            as mdmActive)

    ] FROM UNNEST(arr) AS record)
);

WITH company_organization AS (
  SELECT
    stg.uuid AS uuid,
    stg.description AS name,
    stg.description AS alias,
    (
      select org.federalid from (
        select * except(ranking) 
        from (
          select row_number() over (partition by uuid ORDER BY mdmcounterforentity DESC) ranking, * 
          from stg_protheus_carol_organization)
        where ranking = 1 ) as org 
      where 
        org.mdmTenantId = stg.mdmTenantId 
        and org.uuid = stg.uuid
    ) AS federalid
    --metadata--
  FROM (
    SELECT * EXCEPT(ranking)
    FROM (
      SELECT ROW_NUMBER() OVER (partition BY mdmId ORDER BY mdmCounterForEntity DESC) ranking, *
      FROM stg_protheus_carol_company
      --timestamp-- WHERE mdmCounterForEntity__DATETIME__ > {{start_from}}
    )
    WHERE ranking = 1
  ) AS stg
),
organization_organization AS (
  SELECT
    stg.uuid AS uuid,
    stg.name AS name,
    stg.alias AS alias,
    stg.federalId AS federalid
    --metadata--
  FROM (
    SELECT * EXCEPT(ranking)
    FROM (
      SELECT ROW_NUMBER() OVER (partition BY mdmId ORDER BY mdmCounterForEntity DESC) ranking, *
      FROM stg_protheus_carol_organization
      --timestamp-- WHERE mdmCounterForEntity__DATETIME__ > {{start_from}}
    )
    WHERE ranking = 1
  ) AS stg
),
combinedSources AS (
  SELECT * FROM company_organization
  UNION ALL
  SELECT * FROM organization_organization
),
processedData AS (
  select * except(__mdmId), uuid as __mdmId from (
    SELECT ROW_NUMBER() OVER (partition BY uuid ORDER BY __mdmCounterForEntity DESC) ranking, *
    FROM combinedSources
  )
  where ranking = 1
)

SELECT *,
    (EXISTS(SELECT 1 FROM UNNEST(mdmErrors) WHERE mdmActive = true)) AS mdmDeleted
FROM (
    select dm.*,
        (rejection_rules(ARRAY((SELECT AS STRUCT
            dm.uuid
        )))) AS mdmErrors
    from processedData as dm
)
